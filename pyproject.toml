[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "gcell"
version = "0.1.0"
description = "A Python library that represents different entities in a cell"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Xi Fu", email = "fuxialexander@gmail.com" },
]
maintainers = [
    { name = "Xi Fu", email = "fuxialexander@gmail.com" },
]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "biopython",
    "genomespy",
    "gprofiler-official",
    "gradio",
    "hydra-core",
    "lingam",
    "matplotlib",
    "MOODS-python",
    "networkx",
    "numpy",
    "omegaconf",
    "openpyxl",
    "pandas",
    "plotly",
    "pooch",
    "pyarrow",
    "pyBigWig",
    "pyfaidx",
    "pyranges",
    "requests",
    "s3fs",
    "scipy",
    "seaborn",
    "seqlogo",
    "tqdm",
    "xmlschema",
    "zarr<3",
    "nglview",
    "py3Dmol",
]
# dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/fuxialexander/gcell"
Repository = "https://github.com/fuxialexander/gcell"

[project.optional-dependencies]
test = [
    "pytest>=8.2",
    "pytest-nunit",
    "pytest-mock",
    "pytest-cov",
    "profimp",
]
dev = [
    # getting the dev version
    "setuptools_scm",
    # static checking
    "pre-commit",
    "towncrier",
    "ipykernel",
    "jupyter",
    "nglview",
    "py3Dmol",
    "nbsphinx",
    "nbformat",
    "snapatac2",
    "scanpy",
    "scikit-misc",
]
doc = [
    "sphinx>=7",
    "sphinx-book-theme>=1.1.0",
    "scanpydoc>=0.14.1",
    "sphinx-autodoc-typehints>=1.25.2",
    "myst-parser>=2",
    "myst-nb>=1.1.2",
    "sphinx-design",
    "sphinx-tabs",
    "readthedocs-sphinx-search",
    "sphinxext-opengraph", # for nice cards when sharing on social
    "sphinx-copybutton",
    "nbsphinx>=0.9",
    "ipython>=7.20",  # for nbsphinx code highlighting
    "matplotlib!=3.6.1",
    "sphinxcontrib-bibtex",
    "setuptools", # undeclared dependency of sphinxcontrib-bibtexâ†’pybtex
    "towncrier",
]
gpu = [
    #"esm",
    "culingam",
]
[tool.hatch.version]
source = "vcs"
raw-options.version_scheme = "release-branch-semver"

[tool.hatch.build.targets.wheel]
packages = ["src/gcell"]

[tool.hatch.build.hooks.vcs]
version-file = "src/gcell/_version.py"

[tool.setuptools.package-data]
"gcell" = ["config/**/*.yaml", "**/*.yaml", "**/*.json", "config/*.yaml"]

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--strict-markers",
    "--doctest-modules",
]
testpaths = ["./tests"]
xfail_strict = true
filterwarnings = [
    "error:The specified parameters:FutureWarning",
    "ignore:FigureCanvasAgg is non-interactive:UserWarning",
]

[tool.coverage.run]
data_file = "test-data/coverage"
source_pkgs = ["gcell"]
omit = ["tests/*"]

[tool.coverage.xml]
output = "test-data/coverage.xml"

[tool.coverage.paths]
source = [".", "**/site-packages"]

[tool.coverage.report]
exclude_also = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    '@(numba\.|nb\.)njit.*',
]

[tool.ruff]
src = ["src"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E",       # Error detected by Pycodestyle
    "F",       # Errors detected by Pyflakes
    "W",       # Warning detected by Pycodestyle
    "UP",      # pyupgrade
    "I",       # isort
    "TCH",     # manage type checking blocks
    "TID251",  # Banned imports
    "ICN",     # Follow import conventions
    "PTH",     # Pathlib instead of os.path
    "PYI",     # Typing
    "PLR0917", # Ban APIs with too many positional parameters
    "PT",      # Pytest style
    "SIM",     # Simplify control flow
]
ignore = [
    "E501",  # line too long
    "E402",  # module level import not at top of file
    "F841",  # Unused variable
]

[tool.ruff.lint.isort]
known-first-party = ["gcell"]

[tool.towncrier]
package = "gcell"
directory = "docs/release-notes"
filename = "docs/release-notes/{version}.md"
single_file = false
package_dir = "src"
issue_format = "{{pr}}`{issue}`"
title_format = "(v{version})=\n### {version} {{small}}`{project_date}`"

[tool.towncrier.fragment.bugfix]
name = "Bug fixes"

[tool.towncrier.fragment.doc]
name = "Documentation"

[tool.towncrier.fragment.feature]
name = "Features"

[tool.towncrier.fragment.misc]
name = "Miscellaneous improvements"

[tool.towncrier.fragment.performance]
name = "Performance"

[tool.towncrier.fragment.breaking]
name = "Breaking changes"

[tool.towncrier.fragment.dev]
name = "Development Process"
